name: Publish packages to OSSRH

on:
  push:
    branches:
      - master
      - version-[0-9].[0-9]+.x
    tags:
      - v[0-9].[0-9]+.[0-9]+
  pull_request:
  workflow_call:
    inputs:
      github-ref-name:
        type: string
        required: true
      github-event-number:
        type: string
        required: false
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_PASSWORD:
        required: true
      OSSRH_GPG_KEY:
        required: true
      OSSRH_GPG_PASSPHRASE:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          java-version: 11
          distribution: temurin
          check-latest: true
          cache: maven
          server-id: central
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_KEY }}
      - name: Publish artifacts
        env:
          OSSRH_USERNAME:  ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD:  ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE:  ${{ secrets.OSSRH_GPG_PASSPHRASE }}
          REF_NAME: ${{ inputs.github-ref-name != '' && inputs.github-ref-name || github.ref_name }}
          PR_NUMBER: ${{ inputs.github-event-number != '' && inputs.github-event-number || github.event.number }}
        run: |
          mvn_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ $REF_NAME =~ v[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then
            if [[ v$mvn_version != $REF_NAME ]] ; then
              echo ::error title=Version mismatch::Maven version $mvn_version does not match tag $REF_NAME
              exit 1
            fi
          elif [[ $PR_NUMBER != "" && $mvn_version =~ -SNAPSHOT$ ]] ; then
            pattern="s/(.+)-SNAPSHOT/\1-"$PR_NUMBER"-SNAPSHOT/g"
            mvn_version=$(echo $mvn_version | sed -E $pattern)
            mvn versions:set -DnewVersion=$mvn_version -DgenerateBackupPoms=false -q -DforceStdout
            echo Setting version to $mvn_version
          elif [[ ! $mvn_version =~ -SNAPSHOT$ ]] ; then
            echo ::error title=Non-SNAPSHOT version::Refusing to publish non-snapshot version $mvn_version
            exit 1
          fi
          mvn -B deploy
